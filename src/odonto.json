{
  "openapi": "3.0.0",
  "info": {
    "title": "OdontoSys API",
    "version": "1.0.0",
    "description": "Documentação da API do Sistema OdontoSys. [Postman Collection](http://localhost:5000/odonto.json)"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Servidor Local"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Agendamentos": {
        "type": "object",
        "required": [
          "pacienteId",
          "profissionalId",
          "data",
          "status",
          "obs"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da agendamentos"
          },
          "pacienteId": {
            "type": "integer",
            "description": "ID do paciente agendado"
          },
          "profissionalId": {
            "type": "integer",
            "description": "ID do profissional responsável"
          },
          "data": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora da agendamentos"
          },
          "status": {
            "type": "string",
            "enum": [
              "Agendado",
              "Confirmado",
              "Cancelado",
              "Realizado"
            ],
            "description": "Status atual da agendamentos"
          },
          "obs": {
            "type": "string",
            "description": "Observações adicionais"
          }
        },
        "example": {
          "pacienteId": 1,
          "profissionalId": 1,
          "data": "2024-06-15T14:30:00.000Z",
          "status": "Agendado",
          "obs": "Paciente precisa trazer exames anteriores."
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "nome",
          "email",
          "senha"
        ],
        "properties": {
          "nome": {
            "type": "string",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail do usuário"
          },
          "senha": {
            "type": "string",
            "description": "Senha do usuário"
          }
        },
        "example": {
          "nome": "João Silva",
          "email": "joao@email.com",
          "senha": "123456"
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "senha"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail do usuário"
          },
          "senha": {
            "type": "string",
            "description": "Senha do usuário"
          }
        },
        "example": {
          "email": "joao@email.com",
          "senha": "123456"
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Token JWT de autenticação"
          },
          "refreshToken": {
            "type": "string",
            "description": "Token de atualização"
          }
        },
        "example": {
          "accessToken": "eyJhbGciOiJIUzI1NiIsInR5c...",
          "refreshToken": "dGlzIGlzIGEgdGVzdCB0b2tlbi4uLg=="
        }
      },
      "Despesas": {
        "type": "object",
        "required": [
          "description",
          "amount",
          "category",
          "despesasDate"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único da despesa"
          },
          "description": {
            "type": "string",
            "description": "Descrição da despesa"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Valor da despesa"
          },
          "category": {
            "type": "string",
            "description": "Categoria da despesa"
          },
          "despesasDate": {
            "type": "string",
            "format": "date",
            "description": "Data da despesa"
          },
          "pacienteId": {
            "type": "string",
            "description": "Nome paciente"
          },
          "pacienteEmail": {
            "type": "string",
            "description": "Email paciente"
          },
          "profissionalId": {
            "type": "string",
            "description": "nome profissional"
          }
        },
        "example": {
          "id": 1,
          "description": "Compra de materiais de escritório",
          "amount": 150.75,
          "category": "Material de Escritório",
          "despesasDate": "2024-06-15",
          "pacienteId": "João da Silva",
          "pacienteEmail": "joao.silva@gmail.com",
          "profissionalId": "Dr. José"
        }
      },
      "Paciente": {
        "type": "object",
        "required": [
          "name",
          "email",
          "phone",
          "birthDate",
          "address"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do paciente"
          },
          "name": {
            "type": "string",
            "description": "Nome do paciente"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail do paciente"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do paciente"
          },
          "birthDate": {
            "type": "date",
            "description": "Data de Nascimento"
          },
          "address": {
            "type": "string",
            "description": "Endereco"
          }
        },
        "example": {
          "id": 1,
          "name": "João Silva",
          "email": "joao@email.com",
          "phone": "11999999999",
          "birthDate": "1990-01-01",
          "address": "Rua Exemplo, 123, São Paulo, SP"
        }
      },
      "Pagamento": {
        "type": "object",
        "required": [
          "pacienteId",
          "amount",
          "pagamentoType",
          "pagamentoDate"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do pagamento"
          },
          "pacienteId": {
            "type": "integer",
            "description": "ID do paciente associado"
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Valor do pagamento"
          },
          "pagamentoType": {
            "type": "string",
            "enum": [
              "Particular",
              "Convênio",
              "Comissão"
            ],
            "description": "Tipo de pagamento"
          },
          "pagamentoDate": {
            "type": "string",
            "format": "date",
            "description": "Data do pagamento"
          }
        },
        "example": {
          "id": 1,
          "pacienteId": 3,
          "amount": 250.5,
          "pagamentoType": "Particular",
          "pagamentoDate": "2024-06-15"
        }
      },
      "Profissionais": {
        "type": "object",
        "required": [
          "nome",
          "email",
          "dataNascimento",
          "sexo"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único dao profissional"
          },
          "nome": {
            "type": "strimg",
            "description": "Nome do profissional"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date-time",
            "description": "Data de nascimento do profissional"
          },
          "email": {
            "type": "string",
            "format": "string",
            "description": "email do profissional"
          },
          "sexo": {
            "type": "string",
            "description": "sexo do profissional",
            "enum": [
              "Masculino",
              "Feminino"
            ]
          }
        },
        "example": {
          "nome": "João Silva",
          "email": "joao@email.com",
          "dataNascimento": "2000-01-01T14:30:00.000Z",
          "sexo": "Masculino"
        }
      },
      "ReportResponse": {
        "type": "object",
        "properties": {
          "report": {
            "type": "string",
            "description": "URL do relatório gerado (PDF ou JSON)"
          }
        },
        "example": {
          "report": "http://localhost:5000/reports/financeiro.pdf"
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Nome do arquivo salvo no servidor"
          },
          "url": {
            "type": "string",
            "description": "URL do arquivo para download ou visualização"
          }
        },
        "example": {
          "fileName": "exame123.pdf",
          "url": "http://localhost:5000/uploads/exame123.pdf"
        }
      },
      "Usuario": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID único do usuário"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "E-mail do usuário"
          }
        },
        "example": {
          "id": 1,
          "name": "João Silva",
          "email": "joao@email.com"
        }
      }
    }
  },
  "paths": {
    "/api/agendamentos": {
      "get": {
        "summary": "Lista todos as agendamentos registrados",
        "tags": [
          "Agendamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de agendamentos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Agendamentos"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      },
      "post": {
        "summary": "Realiza um novo agendamento",
        "tags": [
          "Agendamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Agendamentos"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agendamentos agendada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agendamentos"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/agendamentos/{id}": {
      "get": {
        "summary": "Obtém um agendamento pelo ID",
        "tags": [
          "Agendamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID da agendamentos a ser recuperada"
          }
        ],
        "responses": {
          "200": {
            "description": "Agendamentos encontrada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Agendamentos"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Agendamentos não encontrada"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um agendamento existente",
        "tags": [
          "Agendamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID da agendamentos a ser atualizada"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "Agendado",
                      "Confirmado",
                      "Cancelado",
                      "Realizado"
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Agendamento atualizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Agendamento não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Cancela um agendamento",
        "tags": [
          "Agendamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do agendamento a ser cancelado"
          }
        ],
        "responses": {
          "200": {
            "description": "Agendamento cancelado com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Agendamento não encontrado"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Registra um novo usuário",
        "tags": [
          "Autenticação"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário registrado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Autentica um usuário e retorna um token JWT",
        "tags": [
          "Autenticação"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "summary": "Gera um novo access token usando refresh token",
        "tags": [
          "Autenticação"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Token de atualização"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Novo access token gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Token de atualização inválido ou ausente"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "Encerra a sessão do usuário e revoga o refresh token",
        "tags": [
          "Autenticação"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "description": "Token de atualização a ser revogado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout realizado com sucesso"
          },
          "400": {
            "description": "Token de atualização inválido ou ausente"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/api/despesass": {
      "post": {
        "summary": "Cadastra uma nova despesa",
        "tags": [
          "Despesas"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Despesas"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Despesa cadastrada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Despesas"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/enderecos": {
      "get": {
        "summary": "Lista todos os endereços cadastrados",
        "tags": [
          "Endereços"
        ],
        "responses": {
          "200": {
            "description": "Lista de endereços retornada com sucesso"
          }
        }
      },
      "post": {
        "summary": "Cria um novo endereço",
        "tags": [
          "Endereços"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rua": {
                    "type": "string"
                  },
                  "numero": {
                    "type": "string"
                  },
                  "bairro": {
                    "type": "string"
                  },
                  "cidade": {
                    "type": "string"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "cep": {
                    "type": "string"
                  },
                  "contato_id": {
                    "type": "integer"
                  },
                  "contato_tipo": {
                    "type": "string",
                    "enum": [
                      "paciente",
                      "profissional"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Endereço criado com sucesso"
          }
        }
      }
    },
    "/api/enderecos/{id}": {
      "get": {
        "summary": "Busca um endereço pelo ID",
        "tags": [
          "Endereços"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do endereço"
          }
        ],
        "responses": {
          "200": {
            "description": "Endereço encontrado"
          },
          "404": {
            "description": "Endereço não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um endereço",
        "tags": [
          "Endereços"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do endereço"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rua": {
                    "type": "string"
                  },
                  "numero": {
                    "type": "string"
                  },
                  "bairro": {
                    "type": "string"
                  },
                  "cidade": {
                    "type": "string"
                  },
                  "estado": {
                    "type": "string"
                  },
                  "cep": {
                    "type": "string"
                  },
                  "contato_id": {
                    "type": "integer"
                  },
                  "contato_tipo": {
                    "type": "string",
                    "enum": [
                      "paciente",
                      "profissional"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Endereço atualizado com sucesso"
          },
          "404": {
            "description": "Endereço não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um endereço",
        "tags": [
          "Endereços"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do endereço"
          }
        ],
        "responses": {
          "200": {
            "description": "Endereço excluído com sucesso"
          },
          "404": {
            "description": "Endereço não encontrado"
          }
        }
      }
    },
    "/api/google-calendar": {
      "post": {
        "summary": "Cadastra um novo evento no Google Calendar",
        "tags": [
          "Google Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Evento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "401": {
            "description": "Erro ao criar evento no Google Calendar"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/api/notifications/agendamentos": {
      "post": {
        "summary": "Envia um e-mail de notificação para uma agendamentos agendada",
        "tags": [
          "Notificações"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agendamentosId": {
                    "type": "integer",
                    "description": "ID da agendamentos a ser notificada"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notificação enviada com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Agendamentos não encontrada"
          }
        }
      }
    },
    "/api/notifications/pagamento": {
      "post": {
        "summary": "Envia um e-mail de notificação para um pagamento recebido",
        "tags": [
          "Notificações"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pagamentoId": {
                    "type": "integer",
                    "description": "ID do pagamento a ser notificado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notificação enviada com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Pagamento não encontrado"
          }
        }
      }
    },
    "/api/pacientes": {
      "get": {
        "summary": "Lista todos os pacientes cadastrados",
        "tags": [
          "Pacientes"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pacientes retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Paciente"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      },
      "post": {
        "summary": "Cadastra um novo paciente",
        "tags": [
          "Pacientes"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Paciente"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Paciente cadastrado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/pacientes/{id}": {
      "get": {
        "summary": "Obtém um paciente pelo ID",
        "tags": [
          "Pacientes"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do paciente a ser recuperado"
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paciente"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um paciente existente",
        "tags": [
          "Pacientes"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do paciente a ser atualizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Paciente atualizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Remove um paciente do sistema",
        "tags": [
          "Pacientes"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do paciente a ser removido"
          }
        ],
        "responses": {
          "200": {
            "description": "Paciente removido com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Paciente não encontrado"
          }
        }
      }
    },
    "/api/pagamentos": {
      "get": {
        "summary": "Lista todos os pagamentos registrados",
        "tags": [
          "Pagamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de pagamentos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pagamento"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      },
      "post": {
        "summary": "Registra um novo pagamento",
        "tags": [
          "Pagamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pagamento"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pagamento registrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pagamento"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/pagamentos/{id}": {
      "get": {
        "summary": "Obtém um pagamento pelo ID",
        "tags": [
          "Pagamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do pagamento a ser recuperado"
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pagamento"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Pagamento não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um pagamento existente",
        "tags": [
          "Pagamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do pagamento a ser atualizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number",
                    "format": "float"
                  },
                  "pagamentoType": {
                    "type": "string",
                    "enum": [
                      "Particular",
                      "Convênio",
                      "Comissão"
                    ]
                  },
                  "pagamentoDate": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento atualizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Pagamento não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Remove um pagamento do sistema",
        "tags": [
          "Pagamentos"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do pagamento a ser removido"
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento removido com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Pagamento não encontrado"
          }
        }
      }
    },
    "/api/profissionais": {
      "get": {
        "summary": "Lista todos os profissionais cadastrados",
        "tags": [
          "Profissionais"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de profissionais retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profissionais"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      },
      "post": {
        "summary": "Cria um novo profissional",
        "tags": [
          "Profissionais"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Profissionais"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Profissional criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissionais"
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/profissionais/{id}": {
      "get": {
        "summary": "Busca um profissional pelo ID",
        "tags": [
          "Profissionais"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do profissional"
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profissionais"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um profissional",
        "tags": [
          "Profissionais"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do profissional"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nome": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dataNascimento": {
                    "type": "string",
                    "format": "date"
                  },
                  "sexo": {
                    "type": "string",
                    "enum": [
                      "Masculino",
                      "Feminino"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profissional atualizado com sucesso"
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um profissional",
        "tags": [
          "Profissionais"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do Profissional a ser cancelado"
          }
        ],
        "responses": {
          "200": {
            "description": "Profissional excluído com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Profissional não encontrado"
          }
        }
      }
    },
    "/api/reports/financeiro": {
      "get": {
        "summary": "Gera um relatório financeiro detalhado",
        "tags": [
          "Relatórios"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Data de início do relatório"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Data final do relatório"
          }
        ],
        "responses": {
          "200": {
            "description": "Relatório financeiro gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/reports/agendamentos": {
      "get": {
        "summary": "Gera um relatório de agendamento realizados",
        "tags": [
          "Relatórios"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Data de início do relatório"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": false,
            "description": "Data final do relatório"
          }
        ],
        "responses": {
          "200": {
            "description": "Relatório de agendamentos gerado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/telefones": {
      "get": {
        "summary": "Lista todos os telefones cadastrados",
        "tags": [
          "Telefones"
        ],
        "responses": {
          "200": {
            "description": "Lista de telefones retornada com sucesso"
          }
        }
      },
      "post": {
        "summary": "Cria um novo telefone",
        "tags": [
          "Telefones"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numero": {
                    "type": "integer"
                  },
                  "tipo": {
                    "type": "string",
                    "enum": [
                      "celular",
                      "residencial",
                      "comercial"
                    ]
                  },
                  "contato_id": {
                    "type": "integer"
                  },
                  "contato_tipo": {
                    "type": "string",
                    "enum": [
                      "paciente",
                      "profissional"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Telefone criado com sucesso"
          }
        }
      }
    },
    "/api/telefones/{id}": {
      "get": {
        "summary": "Busca um telefone pelo ID",
        "tags": [
          "Telefones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do telefone"
          }
        ],
        "responses": {
          "200": {
            "description": "Telefone encontrado"
          },
          "404": {
            "description": "Telefone não encontrado"
          }
        }
      },
      "put": {
        "summary": "Atualiza os dados de um telefone",
        "tags": [
          "Telefones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do telefone"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numero": {
                    "type": "integer"
                  },
                  "tipo": {
                    "type": "string",
                    "enum": [
                      "celular",
                      "residencial",
                      "comercial"
                    ]
                  },
                  "contato_id": {
                    "type": "integer"
                  },
                  "contato_tipo": {
                    "type": "string",
                    "enum": [
                      "paciente",
                      "profissional"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Telefone atualizado com sucesso"
          },
          "404": {
            "description": "Telefone não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um telefone",
        "tags": [
          "Telefones"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do telefone"
          }
        ],
        "responses": {
          "200": {
            "description": "Telefone excluído com sucesso"
          },
          "404": {
            "description": "Telefone não encontrado"
          }
        }
      }
    },
    "/api/uploads/{pacienteId}": {
      "post": {
        "summary": "Faz o upload de um arquivo para um paciente específico",
        "tags": [
          "Uploads"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pacienteId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do paciente associado ao arquivo"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Arquivo enviado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/File"
                }
              }
            }
          },
          "400": {
            "description": "Nenhum arquivo enviado ou formato inválido"
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      },
      "get": {
        "summary": "Lista todos os arquivos de um paciente",
        "tags": [
          "Uploads"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "pacienteId",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do paciente para listar arquivos"
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de arquivos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/File"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/uploads/{fileName}": {
      "delete": {
        "summary": "Exclui um arquivo do servidor",
        "tags": [
          "Uploads"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "fileName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Nome do arquivo a ser excluído"
          }
        ],
        "responses": {
          "200": {
            "description": "Arquivo excluído com sucesso"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Arquivo não encontrado"
          }
        }
      }
    },
    "/api/usuarios": {
      "get": {
        "summary": "Lista todos os usuários cadastrados",
        "tags": [
          "Usuários"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Usuario"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token inválido ou ausente"
          }
        }
      }
    },
    "/api/usuarios/{id}": {
      "put": {
        "summary": "Atualiza os dados de um usuário existente",
        "tags": [
          "Usuários"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID do usuário a ser atualizado"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso"
          },
          "400": {
            "description": "Dados inválidos"
          },
          "401": {
            "description": "Token inválido ou ausente"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Agendamentos",
      "description": "Gerenciamento de agendamentos"
    },
    {
      "name": "Autenticação",
      "description": "Gerenciamento de usuários e autenticação"
    },
    {
      "name": "Despesas",
      "description": "Gerenciamento de despesas do sistema"
    },
    {
      "name": "Endereços",
      "description": "Gerenciamento de endereços do sistema"
    },
    {
      "name": "Google Calendar",
      "description": "Gerenciamento de eventos do Google Calendar"
    },
    {
      "name": "Notificações",
      "description": "Envio de notificações por e-mail sobre agendamentos e pagamentos"
    },
    {
      "name": "Pacientes",
      "description": "Gerenciamento de pacientes do sistema"
    },
    {
      "name": "Pagamentos",
      "description": "Gerenciamento de pagamentos e recebimentos"
    },
    {
      "name": "Profissionais",
      "description": "Gerenciamento de profissionais do sistema"
    },
    {
      "name": "Relatórios",
      "description": "Geração de relatórios financeiros e de agendamentos"
    },
    {
      "name": "Telefones",
      "description": "Gerenciamento de telefones do sistema"
    },
    {
      "name": "Uploads",
      "description": "Gerenciamento de arquivos (exames, documentos, imagens)"
    },
    {
      "name": "Usuários",
      "description": "Gerenciamento de usuários do sistema"
    }
  ]
}